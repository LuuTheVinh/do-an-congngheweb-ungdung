@model BusinessEntities.ProductEntity
@{
    ViewBag.Title = "PlayVideo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section mediaplayerstyle{
    <link rel="stylesheet" type="text/css" href="../../Content/CustomStyle/mediaplayer.css">
}
    @section playerscript{
    <script type="text/javascript" src="~/Scripts/CustomScripts/player.js")" ></script>
}

 @section videoplayerscript{
    @*Để inline để script tham chiếu đến *@
    <link rel='stylesheet prefetch' href='http://vjs.zencdn.net/5-unsafe/video-js.css'>
    <link href="../../Content/videojs/style.css" rel="stylesheet" />
    <style>

    div {
        color: rgba(255, 106, 0, 1)! important;
    }
    .video-js {
        font-size: 14px! important;
        color: rgba(255, 106,0,1    )! important;
    }

    .vjs-default-skin .vjs-big-play-button {
        font-size: 5em;
        line-height: 1.2em;
        height: 1.3em;
        width: 1.3em;
        border: 0.06666em solid rgba(255, 106, 0, 1);
        border-radius: 0.0em;
        left: 50%;
        top: 50%;
        margin-left: -0.65em;
        margin-top: -0.65em;
    }

    .video-js .vjs-control-bar,
    .video-js .vjs-big-play-button,
    .video-js .vjs-menu-button .vjs-menu-content {
        background-color: #606060;
        background-color: rgba(96, 96, 96, 0.3);
    }

    .video-js .vjs-slider {
        background-color: #b4b4b4;
        background-color: rgba(180, 180, 180, 0.5);
    }

    /* The slider bar color is used for the progress bar and the volume bar
       (the first two can be removed after a fix that's coming) */
    .video-js .vjs-volume-level,
    .video-js .vjs-play-progress,
    .video-js .vjs-slider-bar {
        background: rgba(255,106,0,1);
    }

    /* The main progress bar also has a bar that shows how much has been loaded. */
    .video-js .vjs-load-progress {
        display: none;

        /* Otherwise we'll rely on stacked opacities */
        background: rgba(180, 180, 180, 0.5);
    }

    /* The load progress bar also has internal divs that represent
       smaller disconnected loaded time ranges */
    .video-js .vjs-load-progress div {

      /* Otherwise we'll rely on stacked opacities */
        background: rgba(180, 180, 180, 0.75);
    }

    </style>

    
    <script src="../../Scripts/videojs/prefixfree.min.js"></script>

}
 
@section bodyvideoplayer{
    <style>

  /* Show the controls (hidden at the start by default) */
  .video-js .vjs-control-bar { 
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    
  }

</style>
    <script src='http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
    <script src='http://vjs.zencdn.net/5-unsafe/video.js'></script>

    <script src="../../Scripts/videojs/index.js"></script>

}

<div class="box_left">

    @{
        Html.RenderAction("InfoSpan", "Product",Model);
    }

    <video id="my_video_1" class="video-js vjs-default-skin" controls width="860" height="600" style="background-color: #3C3C3C; "  data-setup='{"playbackRates": [1, 1.5, 2] }'>
   @* <source src="http://vjs.zencdn.net/v/oceans.mp4" type="video/mp4">*@
    @*<source src="../../Videos/@Model.URL.TrimEnd()" type="video/mp4">*@
    <source src="@Model.URL.TrimEnd()" type="video/mp4"> @*test*@

    </video>

    <div id="functionbar" class="functionbar">
        <a href="" download="">
            <div id="downloadbtn" class="controlbtn textbtn unselectable functionbtn embedbtn" style="float: left;" title="Download bài hát">Download
            </div> 
        </a>
        <div id="reportbtn" class="controlbtn textbtn unselectable functionbtn embedbtn" style="float: left;" title="Báo cáo sự cố">
            Báo Cáo
        </div> 
        <div id="comunitybar" class="comunitybar">

            <div id="embedbtn" class="controlbtn textbtn unselectable functionbtn embedbtn" title="Mã nhúng">Embed</div>
            <div id="fbshare" class="controlbtn functionbtn fbsharebtn" title="Chia sẽ trên facebook"></div>
            <div id="ggpluslogo" class="controlbtn functionbtn ggpluslogo" title="Chia sẽ trên Google+"></div>
            <div id="instarlogo" class="controlbtn functionbtn instarlogo" title="Vì lập trình viên không sử dụng instagram nên chức năng này không được kích hoạt"></div>
            <p class="textviews">
                <b style="font-size: 15px; font-weight: 300;">Lượt Xem</b>
                
                <b style="font-size: 20px; font-weight: bold;">@Html.DisplayFor(modelItem => modelItem.Views)</b>
            </p>
        </div>
    </div>

    
    <div id="lyricbox" class="lyricbox">
        <div id="lyrictitle" class="lyrictitle">
            <label style="font-weight:400">Thông tin về </label>
            <s>@Html.DisplayFor(modelItem => modelItem.Name)</s>
        </div>
        <div id="lyric-content" class="lyric-content">
            @{
                var lyric = Model.Description.Split('\n');
                foreach (var item in lyric)
	            {
		            <p>@item</p>
	            }
            }
        </div>
    </div>


    <div class="list_album list_album_musicview">
		<div class="title_box">
			<a href="#">Album Của @Html.DisplayFor(modelItem => modelItem.ArtistProduct.StageName)</a>
		</div>

		<ul class="album-list">
            @{
                var albumproducts = Model.AlbumProducts;
                int count = albumproducts.Count();
                var max = Math.Max(4, count);
                int index;
                Random rand = new Random();
                List<BusinessEntities.AlbumProductEntity> select = new List<BusinessEntities.AlbumProductEntity>(max);
                if (count < max)
                {
                    select = Model.AlbumProducts.ToList();
                }
                else
                {
                    for (int i = 0; i < max; )
                    {
                        index = rand.Next(0, count);
                        if (select.Contains(@Model.AlbumProducts.ElementAt(index)) == false)
                        {
                            select.Add(@Model.AlbumProducts.ElementAt(index));
                            if (select.Count == max)
                            {
                                break;
                            }
                        }
                    }
                }
            }
            @foreach (var item in select)
            {
                <li>
                        <a class="thumbnail" href="#" onmouseover="">
                        <span class="fa fa-play-circle play-icon"> </span>
			            <img src="../../Images/@Model.Thumbnail">
		                </a>
                        <div class="description">
                        <h3>
                            @Html.ActionLink(item.Album.Tittle, "PlayAlbum", "Home", new {albumId = item.AlbumId}, null)
                        </h3>
			            <h4>
                            @Html.ActionLink(@Model.ArtistProduct.StageName, "ViewArtist", "ArtistProduct", new {artistId = @Model.ArtistProduct.Id}, null)
			            </h4>
                        </div>
                </li>              
            }
            </ul>
    </div>
    @{
        Html.RenderAction("Videos", "ArtistProduct", new { artistId = @Model.ArtistProduct.ArtistId });
    }
</div>


<div class="box_right">

    @*Lấy những bài hát cùng ca sĩ*@
    
    @{
        Html.RenderAction("Songs", "ArtistProduct", new { artistId = @Model.ArtistProduct.ArtistId });
    } 
</div>