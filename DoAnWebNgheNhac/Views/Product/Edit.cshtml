@model BusinessEntities.ProductEntity

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    var type = Model.Category;
    if (type == "Video")
    {
        type = "videos";
    }
    else
    { 
        type = "musics";
    }
}

<div class="setting-title">
    <h2 class="title_box">Sửa @Html.DisplayFor(model => model.Name)</h2>
</div> 

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="col-4">
        <legend></legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @*@Html.LabelFor(model => model.ArtistProductId, "ArtistProduct")*@
            Ca sĩ
        </div>
        <div class="editor-field">
            @Html.DropDownList("ArtistProductId", String.Empty)
            @Html.ValidationMessageFor(model => model.ArtistProductId)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.Name)*@
            Tên
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.Category)*@
            Loại
        </div>
        <div class="editor-field">
            @{
                var items = new List<SelectListItem>();

                if (type == "videos")
                {
                    items.Add(new SelectListItem() { Text = "Video", Value = "Video", Selected = true });
                }
                else
                {
                    items.Add(new SelectListItem() { Text = "Nhạc", Value = "Music", Selected = true });
                }
                
                 @Html.DropDownListFor(m => m.Category, new SelectList(items, "Value", "Text"));
            }

            @Html.ValidationMessageFor(model => model.Category)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.Description)*@
            Chi tiết
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.URL)*@
            Sản phẩm
            <br />
            <div class="fileinput-button">
                <i class="fa fa-plus"></i>
                <span class="status-text">Upload...</span>
                <input id="fileupload" type="file" accept="audio/*,video/*">
                <input type="hidden" class="object-context" value="files">
                <input type="hidden" class="upload-context" value="@type">
            </div>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.URL)
            @Html.ValidationMessageFor(model => model.URL)
            <div class="progress">
                <div class="progress-bar"></div>
            </div>
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.Thumbnail)*@
            Ảnh
            <br />
            <div class="imageinput-button">
                <i class="fa fa-plus"></i>
                @if (type == "videos")
                { 
                    <img class="thumb-upload" src="@Model.Thumbnail" width="384" height="216" />
                }
                else {
                    <img class="thumb-upload" src="@Model.Thumbnail" width="200" height="200" />
                }

                <input id="imageupload" type="file" accept="image/*">
                <input type="hidden" class="object-context" value="thumbnails">
                <input type="hidden" class="upload-context" value="@type">
            </div>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Thumbnail)
            @Html.ValidationMessageFor(model => model.Thumbnail)
        </div>

        <div class="editor-label">
            @*@Html.LabelFor(model => model.Views)*@
            Số lượng xem
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Views)
            @Html.ValidationMessageFor(model => model.Views)
        </div>

        <div class="editor-field">
            <input class="button red-button" type="submit" value="Lưu" />
            @Html.ActionLink("Quay lại", "Index", null, new { @class = "button"})
        </div>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!-- Scripts for the jQquery File Upload Plugin in Basic Plus UI style* -->
    @Scripts.Render("~/backload/blueimp/bootstrap/Basic")
    <!-- resize image -->
    @Scripts.Render("~/bundles/jquery/resizeimage")


    @Scripts.Render("~/Scripts/image.upload.js")
    @Scripts.Render("~/Scripts/file.upload.js")
}
